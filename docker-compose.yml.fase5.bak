services:
  postgres:
    image: postgres:14
    container_name: airline-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: airline
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - airline-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: airline-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - airline-network

  flight-service:
    build: ./services/flight-service
    container_name: airline-flight-service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: airline
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    ports:
      - "8001:8000"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - airline-network

  passenger-service:
    build: ./services/passenger-service
    container_name: airline-passenger-service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: airline
    ports:
      - "8002:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - airline-network

  reservation-service:
    build: ./services/reservation-service
    container_name: airline-reservation-service
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: airline
      FLIGHT_SERVICE_URL: http://flight-service:8000
      PASSENGER_SERVICE_URL: http://passenger-service:8000
    ports:
      - "8003:8000"
    depends_on:
      postgres:
        condition: service_healthy
      flight-service:
        condition: service_started
      passenger-service:
        condition: service_started
    restart: unless-stopped
    networks:
      - airline-network

  api-gateway:
    build: ./api-gateway
    container_name: airline-api-gateway
    ports:
      - "8000:8000"
    networks:
      - airline-network

networks:
  airline-network:
    driver: bridge

volumes:
  postgres_data:
  rabbitmq_data:
